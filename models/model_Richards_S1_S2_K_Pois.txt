# JAGS model for estimating the number of total deaths from heat exhaustion and cliff falls at Raine Island

# The assumed cyclical nature of turtle deaths is modeled by the function
# provided in Girondot et al. (2007): Modeling approaches to quantify
# leatherback nesting trends in French Guiana and Suriname. Chelonian
# Conservation and Biology 6(1): 37-46.
#
# The function has the following form:
# S1 <- -S
# M1 <- (1 + (2 * exp(K) - 1) * exp((1/S1) * (P - d))) ^ (-1/exp(K))
# M2 <- (1 + (2 * exp(K) - 1) * exp((1/S) * (P - d))) ^ (-1/exp(K))
# N <- min + (max - min) * (M1 * M2)
#
# d is the number of days from the beginning of nesting season
# S > 0 and S1 = -S define the "fatness" of the function
# K > 0 defines the "flatness" at the peak of the function
# P defines where the peak is relatvie to the range of d min(d) < P < max(d).
# For this analysis, I set P to the middle of the season, that is 
# P = floor((max(d) - min(d))/2) because there is not enough data to 
# estimate this parameter.
# P needs to be provided through data.
# min = 0.
#
# Observed counts are assumed to be normally distributed around this function.
#
# In this modified version, there are two S parameters: S1 and S2. So M1 and M2 
# above are modified as the following:
# S1 < 0
# S2 > 0
# M1 <- (1 + (2 * exp(K) - 1) * exp((1/S1) * (P - d))) ^ (-1/exp(K))
# M2 <- (1 + (2 * exp(K) - 1) * exp((1/S2) * (P - d))) ^ (-1/exp(K))



model{

  for (i in 1:n.seasons){   # year
    for (j in 1:n.vec[i]){   # days
      # state
      M1[i, j] <- (1 + (2 * exp(K) - 1) * exp((1/(-S)) * (P[i] - t[i,j]))) ^ (-1/exp(K))
      M2[i, j] <- (1 + (2 * exp(K) - 1) * exp((1/S) * (P[i] - t[i,j]))) ^ (-1/exp(K))
      X[i, j] <-  max[i] * (M1[i, j] * M2[i, j])
            
      # observation
      y[i, j] ~ dpois(X[i, j])
      loglik[i,j] <- logdensity.pois(y[i,j], X[i,j])                         
      
    }
  }  

  # priors
  for (yr in 1:n.seasons){
    max[yr] ~ dnorm(max.vec[yr], tau.max)T(0,)
    
    #P[yr] ~ dunif(0, 100)

  }

  K ~ dnorm(0, 0.01)T(0,)
  S ~ dnorm(0, 0.1)T(0,)

  tau.max ~ dgamma(5, 0.1)
  sigma.max <- 1/sqrt(tau.max)

}
